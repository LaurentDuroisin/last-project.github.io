<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/structure.xsl"?>
<page>
    <menu>/autres/odfaeg/xml/menu.xml</menu>
    <footer>/autres/odfaeg/xml/footer.xml</footer>
    <title>ODFAEG</title>
    <content>
        <fr>
                <html>
                        <h1>Chapitre V : les vues.</h1>

               Orientation des axes et origine des vues.

Les vues de odfaeg sont différentes des vues SFML, car elle n'imposent pas d'orientation particulière pour les axes, contrairement à SFML qui impose que l'axe y pointe vers le bas, c'est à dire que le coin en haut à gauche de la fenêtre a toujours pour coordonnée 0,0 et le coin en bas à droite à pour coordonnée la largeur et la hauteur de la fenêtre.
Odfaeg n'impose pas d'orientation pour les axes et on peut changer l'orientations des axes comme on le désire, contrairement à SFML, les vues on pour origine le center de la fenêtre et non pas le coin supérieur gauche de la fenêtre et le sens des axes est vers la droite pour l'axe x, vers la gauche pour l'axe y et vers vous pour l'axe z.
On peut changer facilement l'orientation des axes avec la méthode setScale comme ceci :

getView().setScale(1, -1, 1);
getView() permet de récupérer la vue de la fenêtre de rendu dans le l'application.

Dans ce cas là l'axe des y pointera vers le bas comme pour SFML !
Pour changer l'origine il suffit de faire une translation de la vue avant de tout dessiner.

Les composants possèdent également une vue, par défaut, c'est la même vue que celle de la fenêtre de rendu de l'application.

Pour déplacer la vue il suffit d'appeler la méthode move :

getView().move(0, 300, 0);

Ceci déplace la vue de 300 unités vers le bas ou vers le haut. (Cela dépend de l'orientation de l'axe y.)
Pour faire une rotation, il suffit d'appeler la méthode rotate et de passer l'angle et pour zoomer, il suffit d'appeler la fonction zoom et de passer l'échelle.

Par défault la vue est othographique. (en 2D donc)
Avec comme znear, une valeur un peut plus petite que 0 et comme z far une valeur un peu plus grande que la hauteur de la fenêtre, par conséquent tout ce qui est visible doit avoir un z compris entre 0 et la hauteur de la fenêtre sinon l'entité ne sera pas affichée. (Il suffit juste de mettre comme composante z le centre de l'entité 2D et de déplacer aussi la vue en z avec la même valeur que pour y lorsqu'on se déplace dans le monde. (avec le clavier ou bien avec la souris par exemple)

On peut changer la vue et la passer en perspective (en vue 3D) mais ce ne sera pas l'objet de se chapitre, nous verrons cela dans le tutoriel consacré à la 3D.
On peut également changer le viewport de la vue avec la méthode setViewport.

                </html>
        </fr>
    </content>
</page>
